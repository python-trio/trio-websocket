name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build_and_test_pinned:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        # latest pylint/astroid doesn't support 3.7
        # python3.7 is covered in build_and_test_old_deps
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'requirements-dev-full.txt'
      - run: pip install . -r requirements-dev-full.txt
      - run: make test
      - run: make lint
      - run: make typecheck

  build_and_test_old_deps:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8']

    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'requirements-dev.txt'
      - run: |
          pip install . -r requirements-dev.txt
          pip install trio==0.15.0 pytest-trio==0.7.0  # trio with MultiError
          pip install wsproto==0.14.0  # wsproto allowing message during REMOTE_CLOSING, etc.
      - run: make test

  build_and_test_pypy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['pypy-3.9','pypy-3.10']

    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'requirements-dev.txt'
      - run: pip install . -r requirements-dev.txt
      - run: make test

  build_and_test_latest:
    # use latest package versions meeting .in requirements
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.13-dev']
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install . -r requirements-dev.in
      - run: make test
